//! This module is a game where the user is to guess a number generated by the
//! computer within a given amount of tries.

use rand::Rng;

/// Generates a random unsigned 8 bit integer.
fn generate_random_number() -> u8 {
    let mut rng: rand::rngs::ThreadRng = rand::thread_rng();
    return rng.gen();
}

/// Compares two unsigned 8 bit integers.
/// 
/// This function takes a guess and a number to guess and compares them.
/// 
/// # Arguments
/// 
/// * `guess` - A `u8` to be compared against `to_guess`.
/// * `to_guess` - A `u8` to have `guess` compared against.
/// 
/// # Return value
/// 
/// If `guess` is larger than `to_guess` 1 is returned,
/// if `guess` is smaller than `to_guess` 0 is returned,
/// otherwise 2 is returned.
fn evaluate_guess(guess: u8, to_guess: u8) -> u8 {
    if guess > to_guess {return 1;}

    if guess < to_guess {return 0;}

    return 2;
}